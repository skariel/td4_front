import{S as e,i as t,s as a,a as s,e as r,t as o,x as i,g as n,d as h,c,b as l,f as u,h as f,j as d,k as p,l as g,n as m}from"./client.98588399.js";function v(e){let t,a,v,y,w,b,E,A,k,W,I,T,j,H,P,S,x,_,q,C,D,G,L,M,z,B,O,U,K,N,Q,R,$,V,F,J,X,Y,Z,ee,te,ae,se,re,oe,ie,ne,he,ce,le,ue,fe,de,pe,ge,me,ve,ye,we,be,Ee,Ae,ke,We,Ie,Te,je,He,Pe,Se,xe,_e,qe,Ce,De,Ge,Le,Me,ze,Be,Oe,Ue,Ke,Ne,Qe,Re,$e,Ve,Fe,Je,Xe,Ye,Ze,et,tt,at,st,rt,ot,it,nt,ht,ct,lt,ut,ft,dt,pt,gt,mt,vt,yt,wt,bt,Et,At,kt,Wt,It,Tt,jt,Ht,Pt,St,xt,_t,qt,Ct,Dt,Gt,Lt,Mt,zt,Bt,Ot,Ut,Kt,Nt,Qt,Rt,$t,Vt,Ft;return{c(){t=s(),a=r("div"),v=r("a"),y=o("What is this site?"),w=s(),b=r("a"),E=o("What languages and libraries are supported?"),A=s(),k=r("a"),W=o("What testing framework is used?"),I=s(),T=r("a"),j=o("How do I access the solution from the test?"),H=s(),P=r("a"),S=o("What are the limitations, can my program run forever?"),x=s(),_=r("a"),q=o("Tech stack"),C=s(),D=r("a"),G=o("How could this site be further developped?"),L=s(),M=r("a"),z=o("The styling of the site is horrendous"),B=s(),O=r("a"),U=o("Is there search functionality?"),K=s(),N=r("a"),Q=o("Why logging with Github is required to post?"),R=s(),$=r("a"),V=o("Any 3rd party tracking used?"),F=s(),J=r("a"),X=o("Who developed this, how to contact?"),Y=s(),Z=r("a"),ee=r("h1"),te=o("What is this site?"),ae=s(),se=r("p"),re=o("Think Quora or StackOverflow except instead of posting\n\tquestions and answers you post tests and solutions. The\n\tsolutions are automatically run against the tests and results are reported (only final status for now- reporting on memory,\n\tcpu usage, latency, code size etc. are all WIP). Of course current\n\tfeatures are very limited, nothing to compare with the big sites (for e.g.\n\tthere is still no voting, commenting, reputation system etc.)"),oe=s(),ie=r("a"),ne=r("h1"),he=o("What languages and libraries are supported?"),ce=s(),le=r("p"),ue=o("Currently only Python 3.8.* with a few popular libraries e.g. flask,\n\tnumpy, opencv, pytorch (1.5.*). In the future more language could be supported\n\te.g. golang, julia, rust, of course js (node) etc. and also more libraries."),fe=s(),de=r("a"),pe=r("h1"),ge=o("What testing framework is used?"),me=s(),ve=r("p"),ye=r("a"),we=o("the great PyTest"),be=s(),Ee=r("a"),Ae=r("h1"),ke=o("How do I access the solution from the test?"),We=s(),Ie=r("p"),Te=o('The solution is saved as "solution.py" in the same folder as the test so you can\n\t"import solution as S" and then use it e.g. "assert 1 + S.one() == 1".'),je=s(),He=r("a"),Pe=r("h1"),Se=o("What are the limitations, can my program run forever?"),xe=s(),_e=r("p"),qe=o("Up to 10 seconds for now. Memory, disk-size, etc. are all consrtained of course."),Ce=s(),De=r("a"),Ge=r("h1"),Le=o("Tech stack"),Me=s(),ze=r("p"),Be=r("a"),Oe=o("Svelte"),Ue=s(),Ke=r("a"),Ne=o("(Sapper)"),Qe=o(",\n\tPostgres, golang (no web framework), exported static html and js hosted in Github-Pages,\n\tbackend api, workers and DB on a $5 per month server. Code highlighting by\n\t"),Re=r("a"),$e=o("highlight.js"),Ve=o(". Why no HTML over the wire? because it is\n\teasier with Svelte, it has "),Fe=r("a"),Je=o("scoped css"),Xe=o(", \n\tit is fast, small, etc. So for dev sanity. It's really a joy to use. Why no SSR? because\n\tit is easier on the server just serving a bit of json without running a node process. It is\n\ttrivial to add with Sapper, maybe when I get a bigger server."),Ye=s(),Ze=r("a"),et=r("h1"),tt=o("How could this site be further developped?"),at=s(),st=r("p"),rt=o("A few posibilities:"),ot=s(),it=r("ul"),nt=r("li"),ht=o("just for fun, enhancing with many features like commenting, voting, private tests etc."),ct=s(),lt=r("li"),ut=o("a marketplace for test and solutions: pay to see the solution for the test. Also use private  tests\n\t     so solutions cannot be overfitted to the tests. This would require a reputation system, as well as\n\t\t full CI features."),ft=s(),dt=r("li"),pt=o("a tool to manage software development in a TDD style: imagine a tech lead that publishes tests\n\tand a team that implements solutions. This would require integration with existing CI solutions, maybe Github etc."),gt=s(),mt=r("a"),vt=r("h1"),yt=o("The styling of the site is horrendous"),wt=s(),bt=r("p"),Et=o("indeed. But functional. I'm just a programmer :)"),At=s(),kt=r("a"),Wt=r("h1"),It=o("Is there search functionality?"),Tt=s(),jt=r("p"),Ht=o("not yet. Maybe one day..."),Pt=s(),St=r("a"),xt=r("h1"),_t=o("Why logging with Github is required to post?"),qt=s(),Ct=r("p"),Dt=o("to prevent abuse."),Gt=s(),Lt=r("a"),Mt=r("h1"),zt=o("Any 3rd party tracking used?"),Bt=s(),Ot=r("p"),Ut=o("No."),Kt=s(),Nt=r("a"),Qt=r("h1"),Rt=o("Who developed this, how to contact?"),$t=s(),Vt=r("p"),Ft=o("Ariel Keselman (skariel@gmail.com)"),this.h()},l(e){i('[data-svelte="svelte-1six0cj"]',document.head).forEach(n),t=h(e),a=c(e,"DIV",{style:!0});var s=l(a);v=c(s,"A",{href:!0});var r=l(v);y=u(r,"What is this site?"),r.forEach(n),w=h(s),b=c(s,"A",{href:!0});var o=l(b);E=u(o,"What languages and libraries are supported?"),o.forEach(n),A=h(s),k=c(s,"A",{href:!0});var f=l(k);W=u(f,"What testing framework is used?"),f.forEach(n),I=h(s),T=c(s,"A",{href:!0});var d=l(T);j=u(d,"How do I access the solution from the test?"),d.forEach(n),H=h(s),P=c(s,"A",{href:!0});var p=l(P);S=u(p,"What are the limitations, can my program run forever?"),p.forEach(n),x=h(s),_=c(s,"A",{href:!0});var g=l(_);q=u(g,"Tech stack"),g.forEach(n),C=h(s),D=c(s,"A",{href:!0});var m=l(D);G=u(m,"How could this site be further developped?"),m.forEach(n),L=h(s),M=c(s,"A",{href:!0});var Jt=l(M);z=u(Jt,"The styling of the site is horrendous"),Jt.forEach(n),B=h(s),O=c(s,"A",{href:!0});var Xt=l(O);U=u(Xt,"Is there search functionality?"),Xt.forEach(n),K=h(s),N=c(s,"A",{href:!0});var Yt=l(N);Q=u(Yt,"Why logging with Github is required to post?"),Yt.forEach(n),R=h(s),$=c(s,"A",{href:!0});var Zt=l($);V=u(Zt,"Any 3rd party tracking used?"),Zt.forEach(n),F=h(s),J=c(s,"A",{href:!0});var ea=l(J);X=u(ea,"Who developed this, how to contact?"),ea.forEach(n),s.forEach(n),Y=h(e),Z=c(e,"A",{name:!0});var ta=l(Z);ee=c(ta,"H1",{});var aa=l(ee);te=u(aa,"What is this site?"),aa.forEach(n),ta.forEach(n),ae=h(e),se=c(e,"P",{});var sa=l(se);re=u(sa,"Think Quora or StackOverflow except instead of posting\n\tquestions and answers you post tests and solutions. The\n\tsolutions are automatically run against the tests and results are reported (only final status for now- reporting on memory,\n\tcpu usage, latency, code size etc. are all WIP). Of course current\n\tfeatures are very limited, nothing to compare with the big sites (for e.g.\n\tthere is still no voting, commenting, reputation system etc.)"),sa.forEach(n),oe=h(e),ie=c(e,"A",{name:!0});var ra=l(ie);ne=c(ra,"H1",{});var oa=l(ne);he=u(oa,"What languages and libraries are supported?"),oa.forEach(n),ra.forEach(n),ce=h(e),le=c(e,"P",{});var ia=l(le);ue=u(ia,"Currently only Python 3.8.* with a few popular libraries e.g. flask,\n\tnumpy, opencv, pytorch (1.5.*). In the future more language could be supported\n\te.g. golang, julia, rust, of course js (node) etc. and also more libraries."),ia.forEach(n),fe=h(e),de=c(e,"A",{name:!0});var na=l(de);pe=c(na,"H1",{});var ha=l(pe);ge=u(ha,"What testing framework is used?"),ha.forEach(n),na.forEach(n),me=h(e),ve=c(e,"P",{});var ca=l(ve);ye=c(ca,"A",{href:!0});var la=l(ye);we=u(la,"the great PyTest"),la.forEach(n),ca.forEach(n),be=h(e),Ee=c(e,"A",{name:!0});var ua=l(Ee);Ae=c(ua,"H1",{});var fa=l(Ae);ke=u(fa,"How do I access the solution from the test?"),fa.forEach(n),ua.forEach(n),We=h(e),Ie=c(e,"P",{});var da=l(Ie);Te=u(da,'The solution is saved as "solution.py" in the same folder as the test so you can\n\t"import solution as S" and then use it e.g. "assert 1 + S.one() == 1".'),da.forEach(n),je=h(e),He=c(e,"A",{name:!0});var pa=l(He);Pe=c(pa,"H1",{});var ga=l(Pe);Se=u(ga,"What are the limitations, can my program run forever?"),ga.forEach(n),pa.forEach(n),xe=h(e),_e=c(e,"P",{});var ma=l(_e);qe=u(ma,"Up to 10 seconds for now. Memory, disk-size, etc. are all consrtained of course."),ma.forEach(n),Ce=h(e),De=c(e,"A",{name:!0});var va=l(De);Ge=c(va,"H1",{});var ya=l(Ge);Le=u(ya,"Tech stack"),ya.forEach(n),va.forEach(n),Me=h(e),ze=c(e,"P",{});var wa=l(ze);Be=c(wa,"A",{href:!0});var ba=l(Be);Oe=u(ba,"Svelte"),ba.forEach(n),Ue=h(wa),Ke=c(wa,"A",{href:!0});var Ea=l(Ke);Ne=u(Ea,"(Sapper)"),Ea.forEach(n),Qe=u(wa,",\n\tPostgres, golang (no web framework), exported static html and js hosted in Github-Pages,\n\tbackend api, workers and DB on a $5 per month server. Code highlighting by\n\t"),Re=c(wa,"A",{href:!0});var Aa=l(Re);$e=u(Aa,"highlight.js"),Aa.forEach(n),Ve=u(wa,". Why no HTML over the wire? because it is\n\teasier with Svelte, it has "),Fe=c(wa,"A",{href:!0});var ka=l(Fe);Je=u(ka,"scoped css"),ka.forEach(n),Xe=u(wa,", \n\tit is fast, small, etc. So for dev sanity. It's really a joy to use. Why no SSR? because\n\tit is easier on the server just serving a bit of json without running a node process. It is\n\ttrivial to add with Sapper, maybe when I get a bigger server."),wa.forEach(n),Ye=h(e),Ze=c(e,"A",{name:!0});var Wa=l(Ze);et=c(Wa,"H1",{});var Ia=l(et);tt=u(Ia,"How could this site be further developped?"),Ia.forEach(n),Wa.forEach(n),at=h(e),st=c(e,"P",{});var Ta=l(st);rt=u(Ta,"A few posibilities:"),Ta.forEach(n),ot=h(e),it=c(e,"UL",{});var ja=l(it);nt=c(ja,"LI",{});var Ha=l(nt);ht=u(Ha,"just for fun, enhancing with many features like commenting, voting, private tests etc."),Ha.forEach(n),ct=h(ja),lt=c(ja,"LI",{});var Pa=l(lt);ut=u(Pa,"a marketplace for test and solutions: pay to see the solution for the test. Also use private  tests\n\t     so solutions cannot be overfitted to the tests. This would require a reputation system, as well as\n\t\t full CI features."),Pa.forEach(n),ft=h(ja),dt=c(ja,"LI",{});var Sa=l(dt);pt=u(Sa,"a tool to manage software development in a TDD style: imagine a tech lead that publishes tests\n\tand a team that implements solutions. This would require integration with existing CI solutions, maybe Github etc."),Sa.forEach(n),ja.forEach(n),gt=h(e),mt=c(e,"A",{name:!0});var xa=l(mt);vt=c(xa,"H1",{});var _a=l(vt);yt=u(_a,"The styling of the site is horrendous"),_a.forEach(n),xa.forEach(n),wt=h(e),bt=c(e,"P",{});var qa=l(bt);Et=u(qa,"indeed. But functional. I'm just a programmer :)"),qa.forEach(n),At=h(e),kt=c(e,"A",{name:!0});var Ca=l(kt);Wt=c(Ca,"H1",{});var Da=l(Wt);It=u(Da,"Is there search functionality?"),Da.forEach(n),Ca.forEach(n),Tt=h(e),jt=c(e,"P",{});var Ga=l(jt);Ht=u(Ga,"not yet. Maybe one day..."),Ga.forEach(n),Pt=h(e),St=c(e,"A",{name:!0});var La=l(St);xt=c(La,"H1",{});var Ma=l(xt);_t=u(Ma,"Why logging with Github is required to post?"),Ma.forEach(n),La.forEach(n),qt=h(e),Ct=c(e,"P",{});var za=l(Ct);Dt=u(za,"to prevent abuse."),za.forEach(n),Gt=h(e),Lt=c(e,"A",{name:!0});var Ba=l(Lt);Mt=c(Ba,"H1",{});var Oa=l(Mt);zt=u(Oa,"Any 3rd party tracking used?"),Oa.forEach(n),Ba.forEach(n),Bt=h(e),Ot=c(e,"P",{});var Ua=l(Ot);Ut=u(Ua,"No."),Ua.forEach(n),Kt=h(e),Nt=c(e,"A",{name:!0});var Ka=l(Nt);Qt=c(Ka,"H1",{});var Na=l(Qt);Rt=u(Na,"Who developed this, how to contact?"),Na.forEach(n),Ka.forEach(n),$t=h(e),Vt=c(e,"P",{});var Qa=l(Vt);Ft=u(Qa,"Ariel Keselman (skariel@gmail.com)"),Qa.forEach(n),this.h()},h(){document.title="Docs",f(v,"href","docs/#what_is_this_site"),f(b,"href","docs/#languages"),f(k,"href","docs/#testing"),f(T,"href","docs/#access_solution"),f(P,"href","docs/#limitations"),f(_,"href","docs/#tech_stack"),f(D,"href","docs/#future"),f(M,"href","docs/#styling"),f(O,"href","docs/#search"),f(N,"href","docs/#github"),f($,"href","docs/#third_party"),f(J,"href","docs/#contact"),d(a,"display","flex"),d(a,"flex-direction","column"),d(a,"padding-bottom","35px"),d(a,"margin-bottom","35px"),d(a,"border-bottom","solid #333333 1px"),f(Z,"name","what_is_this_site"),f(ie,"name","languages"),f(de,"name","testing"),f(ye,"href","https://docs.pytest.org/en/latest/"),f(Ee,"name","access_solution"),f(He,"name","limitations"),f(De,"name","tech_stack"),f(Be,"href","https://svelte.dev/"),f(Ke,"href","https://sapper.svelte.dev/"),f(Re,"href","https://highlightjs.org/"),f(Fe,"href","https://svelte.dev/tutorial/nested-components"),f(Ze,"name","future"),f(mt,"name","styling"),f(kt,"name","search"),f(St,"name","github"),f(Lt,"name","third_party"),f(Nt,"name","contact")},m(e,s){p(e,t,s),p(e,a,s),g(a,v),g(v,y),g(a,w),g(a,b),g(b,E),g(a,A),g(a,k),g(k,W),g(a,I),g(a,T),g(T,j),g(a,H),g(a,P),g(P,S),g(a,x),g(a,_),g(_,q),g(a,C),g(a,D),g(D,G),g(a,L),g(a,M),g(M,z),g(a,B),g(a,O),g(O,U),g(a,K),g(a,N),g(N,Q),g(a,R),g(a,$),g($,V),g(a,F),g(a,J),g(J,X),p(e,Y,s),p(e,Z,s),g(Z,ee),g(ee,te),p(e,ae,s),p(e,se,s),g(se,re),p(e,oe,s),p(e,ie,s),g(ie,ne),g(ne,he),p(e,ce,s),p(e,le,s),g(le,ue),p(e,fe,s),p(e,de,s),g(de,pe),g(pe,ge),p(e,me,s),p(e,ve,s),g(ve,ye),g(ye,we),p(e,be,s),p(e,Ee,s),g(Ee,Ae),g(Ae,ke),p(e,We,s),p(e,Ie,s),g(Ie,Te),p(e,je,s),p(e,He,s),g(He,Pe),g(Pe,Se),p(e,xe,s),p(e,_e,s),g(_e,qe),p(e,Ce,s),p(e,De,s),g(De,Ge),g(Ge,Le),p(e,Me,s),p(e,ze,s),g(ze,Be),g(Be,Oe),g(ze,Ue),g(ze,Ke),g(Ke,Ne),g(ze,Qe),g(ze,Re),g(Re,$e),g(ze,Ve),g(ze,Fe),g(Fe,Je),g(ze,Xe),p(e,Ye,s),p(e,Ze,s),g(Ze,et),g(et,tt),p(e,at,s),p(e,st,s),g(st,rt),p(e,ot,s),p(e,it,s),g(it,nt),g(nt,ht),g(it,ct),g(it,lt),g(lt,ut),g(it,ft),g(it,dt),g(dt,pt),p(e,gt,s),p(e,mt,s),g(mt,vt),g(vt,yt),p(e,wt,s),p(e,bt,s),g(bt,Et),p(e,At,s),p(e,kt,s),g(kt,Wt),g(Wt,It),p(e,Tt,s),p(e,jt,s),g(jt,Ht),p(e,Pt,s),p(e,St,s),g(St,xt),g(xt,_t),p(e,qt,s),p(e,Ct,s),g(Ct,Dt),p(e,Gt,s),p(e,Lt,s),g(Lt,Mt),g(Mt,zt),p(e,Bt,s),p(e,Ot,s),g(Ot,Ut),p(e,Kt,s),p(e,Nt,s),g(Nt,Qt),g(Qt,Rt),p(e,$t,s),p(e,Vt,s),g(Vt,Ft)},p:m,i:m,o:m,d(e){e&&n(t),e&&n(a),e&&n(Y),e&&n(Z),e&&n(ae),e&&n(se),e&&n(oe),e&&n(ie),e&&n(ce),e&&n(le),e&&n(fe),e&&n(de),e&&n(me),e&&n(ve),e&&n(be),e&&n(Ee),e&&n(We),e&&n(Ie),e&&n(je),e&&n(He),e&&n(xe),e&&n(_e),e&&n(Ce),e&&n(De),e&&n(Me),e&&n(ze),e&&n(Ye),e&&n(Ze),e&&n(at),e&&n(st),e&&n(ot),e&&n(it),e&&n(gt),e&&n(mt),e&&n(wt),e&&n(bt),e&&n(At),e&&n(kt),e&&n(Tt),e&&n(jt),e&&n(Pt),e&&n(St),e&&n(qt),e&&n(Ct),e&&n(Gt),e&&n(Lt),e&&n(Bt),e&&n(Ot),e&&n(Kt),e&&n(Nt),e&&n($t),e&&n(Vt)}}}export default class extends e{constructor(e){super(),t(this,e,null,v,a,{})}}
